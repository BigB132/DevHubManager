const { Client, Message, EmbedBuilder, StringSelectMenuBuilder, ActionRowBuilder, Colors, ButtonBuilder, ButtonStyle, InteractionCallback, ThreadAutoArchiveDuration, ChannelType, ActionRow } = require("discord.js");
const ProjectData = require("../../../models/projectData");
const Preview = require("../../../utils/sendHirePreview");

/**
 * 
 * @param {Client} client 
 * @param {Message} message 
 */

module.exports = async (client, message) => {
    if(message.content === "?hire") {
        const query = {
            projectId: message.channel.id,
        };

        const projectData = await ProjectData.findOne(query);

        if(!projectData) return;

        const closeButton = new ButtonBuilder()
            .setCustomId("cancel")
            .setLabel("Close")
            .setStyle(ButtonStyle.Danger);

        const actionRow2 = new ActionRowBuilder().addComponents(closeButton);

        try {
            const oldHireChannel = await message.guild.channels.fetch(projectData.hireChannelId);
            await message.channel.send({content: `There is already a channel for the generation of the hiring message: ${oldHireChannel}`, components: [actionRow2]});
            return;
        } catch {};

        const hireChannel = await message.guild.channels.create({
            name: `Hire message creation for ${projectData.projectName}`,
            type: ChannelType.GuildText,
            topic: `This channel got generated by/for ${projectData.ownerId} for his project ${projectData.projectName}`,
            parent: projectData.categoryId,
        });


        projectData.hireChannelId = hireChannel.id;
        projectData.save();
        
        const embed = new EmbedBuilder()
            .setTitle("Welcome to the generation of your hire message!")
            .setDescription("Click the button below to continue!")
            .setColor(Colors.NotQuiteBlack);

        const button = new ButtonBuilder()
            .setCustomId("hireContinue")
            .setLabel("Continue")
            .setStyle(ButtonStyle.Primary);

        const actionRow = new ActionRowBuilder().addComponents(button);

        await hireChannel.send({embeds: [embed], components: [actionRow]});
        message.channel.send({content: `Your channel for the hire-message generation got created: ${hireChannel}`, components: [actionRow2]});
    };
};